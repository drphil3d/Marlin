name: Nightly

on:
  repository_dispatch:
    types: trigger-nightly
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC

jobs:
  merge:
    strategy:
      fail-fast: false
      matrix:
        branch: [Printrbot-Play, Printrbot-Play-HB]
    runs-on: ubuntu-latest

    - name: Set up Python
      if: steps.merge.outputs.tag_existed == 'false'
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install pip
      if: steps.merge.outputs.tag_existed == 'false'
      run: |
        python -m pip install --upgrade pip
    - name: Build Marlin
      if: steps.merge.outputs.tag_existed == 'false'
      run: |
        pip install platformio
        ./buildroot/bin/generate_version
        platformio run
        cd .pio/build/STM32F103RC_btt_512K/
        mkdir artifacts
        mv firmware.bin artifacts/
    - name: Create and Push Tag ${{ steps.merge.outputs.tag_name }}
      if: steps.merge.outputs.tag_existed == 'false'
      run: |
        MESSAGE=$(if [[ "${{ steps.merge.outputs.tag_name }}" == v* ]]; then echo "Release ${{ steps.merge.outputs.version_name }}"; else echo "Nightly build at ${{ steps.merge.outputs.date }} on ${{ matrix.branch }}"; fi)
        git tag -a "${{ steps.merge.outputs.tag_name }}" -m "$MESSAGE"
        git push --follow-tags
    - name: Upload firmware
      if: steps.merge.outputs.tag_existed == 'false'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: firmware
        path: .pio/build/STM32F103RC_btt_512K/artifacts
    - name: Create Release
      if: steps.merge.outputs.tag_existed == 'false'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.merge.outputs.tag_name }}
        release_name: ${{ steps.merge.outputs.release_name }}
        draft: false
        prerelease: ${{ steps.merge.outputs.prerelease }}
        body: "[firmware.bin](https://github.com/drphil3d/Marlin/releases/download/${{ github.ref }}/firmware.bin)"
    - name: Upload Release Asset
      if: steps.merge.outputs.tag_existed == 'false'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .pio/build/STM32F103RC_btt_512K/artifacts/firmware.bin
        asset_name: firmware.bin
        asset_content_type: application/zip
